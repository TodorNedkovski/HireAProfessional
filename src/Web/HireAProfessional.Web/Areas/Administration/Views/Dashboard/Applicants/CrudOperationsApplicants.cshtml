@using HireAProfessional.Web.ViewModels.Applications
@model ApplicationListViewModel

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Applicants</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
</head>
<body>
    <h1>Crud Operation</h1>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Company Name</th>
                <th>Applicant First Name</th>
                <th>Applicant Last Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var application in this.Model.Applications)
            {
                <tr>
                    <td>@application.CompanyName</td>
                    <td>@application.ApplicationUserFirstName</td>
                    <td>@application.ApplicationUserLastName</td>
                    <td>
                        <a onclick="approveApplication('@application.Id')" class="btn btn-success">Approve</a>
                        <a onclick="deleteLocation('@application.Id')" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav>
        <ul class="pagination justify-content-center">
            @if (this.Model.CurrentPage == 1)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-area="administration"
                       asp-route="dashboardArea"
                       asp-route-page="@(this.Model.CurrentPage - 1)">Previous</a>
                </li>
            }

            @for (int i = 1; i <= this.Model.PagesCount; i++)
            {
                var active = i == this.Model.CurrentPage ? "active" : string.Empty;
                <li class="page-item @active">
                    <a class="page-link"
                       asp-area="administration"
                       asp-route="dashboardArea"
                       asp-route-page="@i">@i</a>
                </li>
            }

            @if (this.Model.CurrentPage == this.Model.PagesCount)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">Next</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-area="administration"
                       asp-route="dashboardArea"
                       asp-route-page="@(this.Model.CurrentPage + 1)">Next</a>
                </li>
            }
        </ul>
    </nav>
</body>
</html>
<script>
    function deleteLocation(applicationId) {
        let headers = {
            method: 'POST',
            body: JSON.stringify({
                'applicationId': applicationId,
            }),
            headers: {
                'content-type': 'application/json'
            }
        }

        fetch('https://localhost:44319/api/applications/delete', headers)
    }

    function approveApplication(applicationId) {
        let headers = {
            method: 'POST',
            body: JSON.stringify({
                'id': applicationId
            }),
            headers: {
                'content-type': 'application/json'
            }
        }

        fetch('https://localhost:44319/api/applications/approve', headers)
    }
</script>